name: CD

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      app:
        description: 'App to deploy'
        required: true
        default: 'All'
        type: choice
        options:
          - All
          - API
          - Client

env:
  NODE_VERSION: '16'

jobs:
  release:
    name: 'Release Please'
    runs-on: ubuntu-latest

    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      paths_released: ${{ steps.release-please.outputs.paths_released }}

    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        if: github.event_name != 'workflow_dispatch'
        id: release-please
        with:
          command: manifest
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json

  deploy-api:
    name: 'Deploy API'
    runs-on: ubuntu-latest
    needs: [release]

    if: (github.event_name == 'workflow_dispatch' && contains(fromJson('["All", "API"]'), github.event.inputs.app)) || (needs.release.outputs.releases_created && contains(fromJSON(needs.release.outputs.paths_released), 'api'))

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Push to dokku
        uses: dokku/github-action@master
        with:
          branch: 'master'
          git_remote_url: 'ssh://dokku@${{ secrets.DOKKU_SSH_HOST }}/${{ secrets.DOKKU_APPNAME }}'
          ssh_private_key: ${{ secrets.DOKKU_SSH_KEY }}

  deploy-client:
    name: 'Deploy Client'
    runs-on: ubuntu-latest
    needs: [release]

    if: (github.event_name == 'workflow_dispatch' && contains(fromJson('["All", "Client"]'), github.event.inputs.app)) || (needs.release.outputs.releases_created && contains(fromJSON(needs.release.outputs.paths_released), 'client'))

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --workspace client
        env:
          VITE_TITLE: 'Prod Title'
          VITE_API_ADDR: '${{ secrets.API_URL }}'

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './client/dist'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-config-path: ./client/netlify.toml
          github-deployment-environment: 'Production'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_API_ID }}
