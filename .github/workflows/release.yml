name: CD

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      app:
        description: 'App to deploy'
        required: true
        default: 'All'
        type: choice
        options:
          - All
          - API
          - Client

env:
  NODE_VERSION: '16'

jobs:
  release:
    name: 'Release Please'
    runs-on: ubuntu-latest

    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      paths_released: ${{ steps.release-please.outputs.paths_released }}

    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        if: github.event_name != 'workflow_dispatch'
        id: release-please
        with:
          command: manifest
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json

  deploy-api:
    name: 'Deploy API'
    runs-on: ubuntu-latest
    needs: [release]

    if: (github.event_name == 'workflow_dispatch' && contains(fromJson('["All", "API"]'), github.event.inputs.app)) || (needs.release.outputs.releases_created && contains(fromJSON(needs.release.outputs.paths_released), 'api'))

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Push to dokku
        uses: dokku/github-action@master
        with:
          branch: 'master'
          git_remote_url: 'ssh://dokku@${{ secrets.DOKKU_SSH_HOST }}/${{ secrets.DOKKU_APPNAME }}'
          ssh_private_key: ${{ secrets.DOKKU_SSH_KEY }}

  deploy-client:
    name: 'Deploy Client'
    runs-on: ubuntu-latest
    needs: [release]

    env:
      VERCEL_TOKEN: '${{ secrets.VERCEL_TOKEN }}'
      VERCEL_ORG_ID: '${{ secrets.VERCEL_ORG_ID }}'
      VERCEL_PROJECT_ID: '${{ secrets.VERCEL_PROJECT_ID }}'

    if: (github.event_name == 'workflow_dispatch' && contains(fromJson('["All", "Client"]'), github.event.inputs.app)) || (needs.release.outputs.releases_created && contains(fromJSON(needs.release.outputs.paths_released), 'client'))

    steps:
      - name: Check Vercel Token
        if: env.VERCEL_TOKEN == ''
        run: |
          echo 'You are missing the VERCEL_TOKEN secret!' \
          exit 1

      - name: Check Vercel Org ID
        if: env.VERCEL_ORG_ID == ''
        run: |
          echo 'You are missing the VERCEL_ORG_ID secret!' \
          exit 1

      - name: Check Vercel Project ID
        if: env.VERCEL_PROJECT_ID == ''
        run: |
          echo 'The VERCEL_PROJECT_ID secret is missing, this will deploy as a new site.' \
          echo 'If you wanted to update a project instead, make sure to set the VERCEL_PROJECT_ID secret and run this deploy again!'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          working-directory: './client'
          vercel-token: '${{ secrets.VERCEL_TOKEN }}'
          vercel-org-id: '${{ secrets.VERCEL_ORG_ID }}'
          vercel-project-id: '${{ secrets.VERCEL_PROJECT_ID }}'
          vercel-args: '--prod'
